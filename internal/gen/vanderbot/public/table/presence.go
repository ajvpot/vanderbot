//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Presence = newPresenceTable("public", "presence", "")

type presenceTable struct {
	postgres.Table

	// Columns
	GuildID   postgres.ColumnString
	Blob      postgres.ColumnString
	CreatedAt postgres.ColumnTimestampz
	UserID    postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PresenceTable struct {
	presenceTable

	EXCLUDED presenceTable
}

// AS creates new PresenceTable with assigned alias
func (a PresenceTable) AS(alias string) *PresenceTable {
	return newPresenceTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new PresenceTable with assigned schema name
func (a PresenceTable) FromSchema(schemaName string) *PresenceTable {
	return newPresenceTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new PresenceTable with assigned table prefix
func (a PresenceTable) WithPrefix(prefix string) *PresenceTable {
	return newPresenceTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new PresenceTable with assigned table suffix
func (a PresenceTable) WithSuffix(suffix string) *PresenceTable {
	return newPresenceTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newPresenceTable(schemaName, tableName, alias string) *PresenceTable {
	return &PresenceTable{
		presenceTable: newPresenceTableImpl(schemaName, tableName, alias),
		EXCLUDED:      newPresenceTableImpl("", "excluded", ""),
	}
}

func newPresenceTableImpl(schemaName, tableName, alias string) presenceTable {
	var (
		GuildIDColumn   = postgres.StringColumn("guild_id")
		BlobColumn      = postgres.StringColumn("blob")
		CreatedAtColumn = postgres.TimestampzColumn("created_at")
		UserIDColumn    = postgres.StringColumn("user_id")
		allColumns      = postgres.ColumnList{GuildIDColumn, BlobColumn, CreatedAtColumn, UserIDColumn}
		mutableColumns  = postgres.ColumnList{GuildIDColumn, BlobColumn, CreatedAtColumn}
	)

	return presenceTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		GuildID:   GuildIDColumn,
		Blob:      BlobColumn,
		CreatedAt: CreatedAtColumn,
		UserID:    UserIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
